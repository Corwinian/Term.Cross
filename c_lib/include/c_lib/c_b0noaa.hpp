/*-------------------------------------------------------------------------
    c_b0noaa.hpp
-------------------------------------------------------------------------*/
#ifndef _C_B0NOAA_HPP_
#define _C_B0NOAA_HPP_

#include <c_lib/c_types.hpp>

#pragma pack(1)

#define A0_PACK_1_2  0
#define A0_PACK_3_4  1
#define A0_PACK_8_10 2
/*-------------------------------------------------------------------------
    TBlk0_HRPT
    Формат 0-блока файлов упакованных данных HRPT.
-------------------------------------------------------------------------*/
struct TBlk0_HRPT {
	TBlk0_Common b0;

	/*
	Значения полей frameNum и lostFrameNum в сумме дают общее количество строк
	в файле.
	*/
	uint16_t  frameNum;       /* 64   Количество принятых строк. */
	uint16_t  lostFrameNum;   /* 66   Количество строк со сбоем синхронизации. */
	/*
	Следующие три поля описывают качество данных в файле.
	Среди принятых могут быть строки, у которых было сбито поле времени. После
	приема оно восстанавливается. Количество таких строк в файле записывается в
	поле correctedTimeFrameNum.
	Поле gapNum содержит количество групп строк со сбоем синхронизации. Суммарное
	число строк в этих группах равно lostFrameNum.
	*/
	uint16_t  validTimeFrameNum;      /* 68   Количество строк, изначально принятых с правильным значением поля времени. */
	uint16_t  correctedTimeFrameNum;  /* 70   Количество строк, изначально принятых с неправильным значением поля времени, которое затем было исправлено. */
	uint16_t  gapNum;         /* 72   Количество пропусков данных (gaps). Общее количество кадров в этих дырах равно lostFrameNum. */

	uint16_t  packType;       /* 74   Тип упаковки. 0 - 1*10->2b, 1 - 3*10->4b, 2 - 8*10->10b */
	uint16_t  totalPixNum;    /* 76   Полная длина строки в пикселах. Для NOAA всегда 2048. */
	uint32_t   frameMask;      /* 78   Маска кадра HRPT. */
	uint16_t  pixGap;         /* 82   Количество пропущенных пикселов от начала строки. */
	uint16_t  pixNum;         /* 84   Количество принятых пикселов строки. */
	uint16_t  ascendFlag;     /* 86   Тип витка: 0 - нисходящий, 1 - восходящий. */
	uint8_t   reserved1[40];  /* 88 */

	/* Телеграмма NORAD. */
	uint32_t   revNum;         /* 128  Номер опорного витка. */
	uint16_t  setNum;         /* 132  Номер набора. */
	uint16_t  ephemType;      /* 134  Тип эфемерид. */
	uint16_t  year;           /* 136  Год. */
	double  yearTime;       /* 138  Полное время в году, выраженное в днях (1-based). */
	double  n0;             /* 146  Среднее движение (рад/мин). */
	double  bstar;          /* 154  Сопротивление атмосферы. */
	double  i0;             /* 162  Наклонение орбиты (рад). */
	double  raan;           /* 170  Прямое восхождение (рад). */
	double  e0;             /* 178  Эксцентриситет. */
	double  w0;             /* 186  Аргумент перигея (рад). */
	double  m0;             /* 194  Средняя аномалия (рад). */

	uint8_t   reserved2[54];  /* 202 */

	/*
	Параметры коррекции географической привязки. Непосредственно после приема
	все эти поля равны 0. Вычисляются при обработке программой коррекции привязки.
	*/
	uint16_t  corVersion;     /* 256  Номер версии коррекции, 0 - ее отсутствие. */
	int16_t   corTBUSTime;    /* 258  Поправка времени, вычисленная по телеграмме TBUS (мсек). */
	int16_t   corTime;        /* 260  Поправка времени, вычисленная иным способом (мсек). */
	double  corRoll;        /* 262  Угол крена (рад). */
	double  corPitch;       /* 270  Угол тангажа (рад). */
	double  corYaw;         /* 278  Угол рысканья (рад). */

	uint8_t   spare[512-286];
};


/*-------------------------------------------------------------------------
    TBlk0_AVHRR
    Формат переменной части 0-блока файлов распакованных данных одного
    канала AVHRR (одноканальных файлов данных).
 
    Пикселы изображения, хранящегося в файле этого формата, имеют тип
    знаковое_двухбайтовое_целое и делятся на значимые и незначимые.
    Значимые пикселы сформированы сканером спутника или получены из них в
    результате обработки и имеют значения >=0. Незначимые пикселы - это
    пикселы сбойных строк или масок; имеют значения <0.
-------------------------------------------------------------------------*/
struct TBlk0_AVHRR {
	TBlk0_Common b0;

	/*
	Поле processLevel является набором битовых флагов. Служит для фиксации стадий
	обработки данных. После создания файла утилитой распаковки это поле равно 0
	(необработанные данные). При последующей обработке обновляется соответствующими
	утилитами или процедурами.
	*/
	uint32_t   processLevel;        /* 64 */
	/*
	Номер канала. Для данных NOAA AVHRR допустимы значения 1,2,3,4,5. После
	процедуры многоканальной атмосферной коррекции, где используются данные 4 и 5
	каналов, это поле равно 4.
	*/
	uint16_t  channel;        /* 68 */
	/*
	Общее количество строк. Равно сумме значений полей frameNum и lostFrameNum
	исходного файла данных HRPT (см. описание структуры TBlk0_HRPT).
	*/
	uint16_t  totalFrameNum;  /* 70 */
	uint16_t  totalPixNum;    /* 72 */
	uint16_t  pixGap;         /* 74 */
	uint16_t  pixNum;         /* 76 */
	uint16_t  ascendFlag;     /* 78 */
	/*
	    Поле maxPixelValue содержит максимальную величину среди ЗНАЧИМЫХ пикселов изображения.
	*/
	uint16_t  maxPixelValue;  /* 80 */
	/*
	Поля ka и kb содержат значения коэффициентов пересчета значения пиксела в
	физическую величину. Формула пересчета: t = ka*p + kb, где p - значение пиксела.
	После создания файла утилитой распаковки значения этих полей равны 0. При
	дальнейшей обработке эти поля содержат такие значения, при которых значения
	пикселов изображения >= 0 (ЗАМЕЧАНИЕ: при этом в изображении ДОЛЖНЫ БЫТЬ
	пикселы, равные 0). Значения пикселов >= 32768 (0x8000) используются для целей
	маскирования.
	*/
	double  ka;             /* 82 */
	double  kb;             /* 90 */

	uint8_t   reserved1[30];  /* 98 */

	/* Телеграмма NORAD. */
	uint32_t   revNum;         /* 128 */
	uint16_t  setNum;         /* 132 */
	uint16_t  ephemType;      /* 134 */
	uint16_t  year;           /* 136 */
	double  yearTime;       /* 138 */
	double  n0;             /* 146 */
	double  bstar;          /* 154 */
	double  i0;             /* 162 */
	double  raan;           /* 170 */
	double  e0;             /* 178 */
	double  w0;             /* 186 */
	double  m0;             /* 194 */

	uint8_t   reserved2[54];  /* 202 */

	/* Параметры коррекции географической привязки. */
	uint16_t  corVersion;     /* 256 */
	short   corTBUSTime;    /* 258 */
	short   corTime;        /* 260 */
	double  corRoll;        /* 262 */
	double  corPitch;       /* 270 */
	double  corYaw;         /* 278 */

	uint8_t   spare[512-286];
};




/*-------------------------------------------------------------------------
	TBlk0_TLM
	Структура, описывающая формат переменной части 0-блока для файлов данных
	телеметрии NOAA.
-------------------------------------------------------------------------*/
struct TBlk0_TLM {
	TBlk0_Common b0;

	uint16_t  totalFrameNum;  /* 64 */
	uint16_t	channel;		/* 66 	Номер канала (1,2,3,4,5). */

	uint8_t   spare[512-68];
};


/*-------------------------------------------------------------------------
    TOldBlk0
    Формат паспорта файлов данных, использовавшийся до 1999 года.
-------------------------------------------------------------------------*/
struct TOldBlk0 {
	uint8_t day;       /* 0    Число (1..31). */
	uint8_t month;     /* 1    Месяц (1..12). */
	uint8_t year;      /* 2    Год ( начиная от 1900 ). */
	uint8_t satNumber; /* 3    бит 0: 0 - канал A, канал B (только для APT); биты 1-6: номер ИСЗ; бит 7: 0-APT, 1-HRPT */
	uint8_t hour;      /* 4 */
	uint8_t minute;    /* 5 */
	uint8_t sec;       /* 6 */
	uint8_t tic;       /* 7 */
	uint16_t revNum;      /* 8    Номер витка. */
	uint16_t totalScans;  /* 10   Число сканов в снимке. */
	/* В полях unused3 и unused4 располагается телеграмма APT. */
	uint8_t unused3[40];
	uint8_t satType;       /* 52    Тип спутника ( 0 - NOAA, 1 - GMS ). */
	uint8_t unused35[1];
	uint8_t launchYear;    /* 54    Год запуска спутника ( начиная от 1900 ). */
	uint8_t unused4[129];
	/*-------------------------------------------------------------------------*/
	float minT;         /* 184   Минимальная температура после калибровки. */
	float stepT;        /* 188   Шаг по температуре. */
	uint8_t chNumber;      /* 192   Номер канала. */
	uint8_t calCode;       /* 193   Код калибровки. */
	uint8_t numberOfClasses;   /* 194 Число классов после классификации, <= 20. */
	uint8_t classes[60];       /* Классы: [0] код класса */
	/*         [1] min высота ( в сотнях метров ) */
	/*         [2] max высота ( в сотнях метров ) */
	uint8_t    unused10[1];
	/*-------------------------------------------------------------------------*/
	uint8_t typeOfFile; /* 256 Тип файла:
	                            0 - APT
	                            1 - HRPT
	                            2 - unpacked HRPT ( 2 byte/pixel )
	                            3 - unpacked HRPT ( 1 byte/pixel )
	                            4 - GMS LRFAX
	                            5 - GMS HRFAX
	                            6 - Mercator projection
	                            7 - Equdist. projection */
	uint8_t typeOfPack; /* 257 Тип упаковки HRPT: 0 - 1*10->2b, 1 - 3*10->4b, 2 - 8*10->10b */
	uint16_t numberOfFrames;  /* 258 Количество малых кадров HRPT. */
	uint16_t frameLength;     /* 260 Длина кадра HRPT. */
	uint8_t unused11[2];       /* 262 */
	uint16_t frameSegMask;    /* 264 Маска сегментов кадра HRPT. */
	uint16_t pixStrPassed;    /* 266 Число пропущенных пикселов от начала строки AVHRR. */
	uint16_t pixStrLength;    /* 268 Число принятых пикселов строки AVHRR. */
	/*-------------------------------------------------------------------------*/
	uint16_t projPixStrLength;    /* 270 Число пикселов в строке проекции. */
	uint16_t projNumberOfScans;   /* 272 Число строк проекции. */
	uint16_t projPixelBytes;      /* 274 Число байт на пиксел проекции. */
	float projPixelSize;        /* 276 Размер одного пиксела проекции ( град. ) */
	float minProjLat;           /* 280 */
	float maxProjLat;           /* 284 */
	float minProjLon;           /* 288 */
	float maxProjLon;           /* 292 */
	uint16_t hProjShift;          /* 296 Сдвиг проекции по горизонтали. */
	uint16_t vProjShift;          /* 298 Сдвиг проекции по вертикали. */
	uint16_t processState;        /* 300 */
	float mKHR;                 /* 302 Среднее по фрагменту отношение высоты ИСЗ над Землей к радиусу орбиты. */
	uint16_t hPolyDegree;
	uint16_t vPolyDegree;
	float polyCoeffs[20];
	/* Телеграмма NORAD. ----------------------------------------------------*/
	uint16_t nSatnum;     /* 390 номер спутника */
	uint32_t nRevnum;      /* 392 номер витка */
	uint16_t nElnum;      /* 396 номер набора элементов */
	uint16_t nEtype;      /* 398 тип эфемерид */
	uint16_t nYear;       /* 400 год */
	uint16_t nDay;        /* 402 день в году */
	double nDayfrac;    /* 404 время дня */
	double nN0;         /* 412 среднее движение */
	double nBSTAR;      /* 420 */
	double nI0;         /* 428 наклонение */
	double nRAAN;       /* 436 долгота восходящего узла */
	double nE0;         /* 444 эксцентриситет */
	double nW0;         /* 452 аргумент перигея */
	double nA0;         /* 460 большая полуось */
	double nM0;         /* 468 средняя аномалия */
	uint8_t unused15[36];  /* 476 */
};


#pragma pack()

#endif

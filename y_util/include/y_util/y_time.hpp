/*-----------------------------------------------------------------------------
    y_time.hpp
-----------------------------------------------------------------------------*/
#ifndef _Y_TIME_HPP_
#define _Y_TIME_HPP_

#include <tc_config.h>
#include <c_lib/c_types.hpp>

//--------------------------------------------------------------------------
//  isLeapYear
//  Функция определяет високосность года.
//  Прототип:
//  int isLeapYear( int year )
//
//  0   год невисокосный
//  1   год високосный
//--------------------------------------------------------------------------
int isLeapYear( int );

//--------------------------------------------------------------------------
//  dayTimeToFraction
//  Функция вычисляет по времени суток, заданному обычным образом, время
//  суток, выраженное в виде дробной части дня.
//  Прототип:
//  double dayTimeToFraction( int hour, int minute, int second, int tic )
//--------------------------------------------------------------------------
double dayTimeToFraction( int, int, int, int );

//--------------------------------------------------------------------------
//  dayFractionToTime
//  Функция вычисляет по времени суток, заданному в виде дробной части дня,
//  время, выраженное обычным образом.
//  Прототип:
//  void dayFractionToTime( double dayFraction, int *hour, int *minute,
//                          int *second, int *tic )
//--------------------------------------------------------------------------
void dayFractionToTime( double, int *, int *, int *, int * );

//--------------------------------------------------------------------------
//  dateToDay
//  Функция вычисляет номер дня в году по его дате.
//  Прототип:
//  int dateToDay( int year, int month, int date )
//  Параметры:
//  year    Год.
//  month   Месяц (0-based).
//  date    Число (0-based).
//  Возвращаемое значение: номер дня в году (0-based).
//--------------------------------------------------------------------------
int dateToDay( int, int, int );

//--------------------------------------------------------------------------
//  dayToDate
//  Функция вычисляет дату дня по его номеру в году.
//  Прототип:
//  void dayToDate( int year, int year_day, int *month, int *date );
//  Парметры:
//  year        Год (полный).
//  year_day    Номер дня в году (0-based).
//  Возвращаемые значения:
//  month       Номер месяца (0-based).
//  date        Дата (0-based).
//--------------------------------------------------------------------------
void dayToDate( int, int, int *, int * );

//--------------------------------------------------------------------------
//  dateToDay1
//  Функция вычисляет номер дня в году по его дате.
//  Прототип:
//  int dateToDay( int year, int month, int date )
//  Параметры:
//  year    Год.
//  month   Месяц (1-based).
//  date    Число (1-based).
//  Возвращаемое значение: номер дня в году (1-based).
//--------------------------------------------------------------------------
int dateToDay1( int, int, int );

//--------------------------------------------------------------------------
//  dayToDate1
//  Функция вычисляет дату дня по его номеру в году.
//  Прототип:
//  void dayToDate( int year, int year_day, int *month, int *date );
//  Парметры:
//  year        Год (полный).
//  year_day    Номер дня в году (1-based).
//  Возвращаемые значения:
//  month       Номер месяца (1-based).
//  date        Дата (1-based).
//--------------------------------------------------------------------------
void dayToDate1( int, int, int *, int * );

//--------------------------------------------------------------------------
//  timeBetween
//  Функция вычисляет разницу между двумя моментами времени.
//  Прототип:
//  double timeBetween( int year1, double yearTime1, int year2, double yearTime2 )
//  Параметры:
//  year1, yearTime1    Задают первый момент времени; день года - 0-based.
//  year2, yearTime2    Задают второй момент времени; день года - 0-based.
//  Возвращаемое значение:
//  Разность в днях между вторым и первым моментами времени.
//  ВНИМАНИЕ !!! Параметры year1 и year2 должны удовлетворять условию: fabs(year2 - year1) <= 1.
//  Результат > 0 , если второй момент времени позже первого.
//--------------------------------------------------------------------------
double timeBetween( int, double, int, double );

/*---------------------------------------------------------------------
	dayAdd
	Дополнительная функция к функциям работы с временем типа Year и
	Year_Day. Производит прибавление промежутка add_day, выраженного
	в днях, к моменту времени year, year_day.


	1. Результирующие значения возвращаются в тех же переменных.
	2. Функция производит корректировку года и дня в году, если момент
	времени переходит через год. Параметр add_day может иметь произвольное
	значение больше, меньше или равное 0.0. В последнем случае функция
	просто нормирует заданные значения с учетом перехода через год.
	Корректировка года обязательно нужна при использовании функций
	dayToDate() и mjd1(), так как в них отсутствует проверка на
	переполнение индекса месяца, если количество дней в году больше
	размера года в днях.

	Date: 12 september 2006
---------------------------------------------------------------------*/
void dayAdd( int*, double*, double );

#endif
